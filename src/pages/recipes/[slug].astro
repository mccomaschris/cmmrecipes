---
import Layout from '../../layouts/Layout.astro';

const { slug } = Astro.params;

let res = await fetch(`http://recipes.test/wp-json/wp/v2/recipe?slug=${slug}`);
let [post] = await res.json();

// The getStaticPaths() is required for static Astro sites.
// If using SSR, you will not need this function.
export async function getStaticPaths() {
  let data = await fetch("http://recipes.test/wp-json/wp/v2/recipe");
  let posts = await data.json();

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post: post },
  }));
}
---
<Layout title={post.title.rendered}>
	<div class="flex flex-wrap lg:-mx-12">
		<div class="w-full lg:w-1/3 lg:px-12"></div>

		<div class="w-full lg:w-2/3 lg:px-12">
			<h1 set:html={post.title.rendered}></h1>
			<div class="">
				<div class="flex flex-wrap gap-x-2 gap-y-1">
					<!-- {post..map(tag => (
						<Pill
							href={`/recipes/tags/${tag.slug}`}
							title={tag.name}
						/>
					  ))} -->
				</div>
			</div>
		</div>
	</div>

	<div class="flex flex-wrap lg:-mx-12">
		<div class="w-full lg:w-1/3 lg:px-12">
			<h2>Ingredients</h2>
			<ul class="list-none pl-0">
				{post.acf.ingredients.map((ingredient) => (
					<li set:html={ingredient.ingredient}></li>
				))}
			</ul>
		</div>

		<div class="w-full lg:w-2/3 lg:px-12">
			<h2>Instructions</h2>
			<ol class="list-none pl-0 ordered-list">
				{post.acf.instructions.map((instruction) => (
					<li class="pl-0">
						<h3></h3>
						<span set:html={instruction.instruction}></span>
					</li>
				))}
			</ol>
		</div>
	</div>
</Layout>

<style>
ol.ordered-list {
	counter-reset: list-number;
}

ol.ordered-list li h3:before {
	counter-increment: list-number;
	content: 'Step ' counter(list-number);
	display: block;
}
</style>
